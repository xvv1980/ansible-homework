---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

#-----------------------------------------------------------------------------------------------------------------
- name: Install Vector
  hosts: vector
  handlers:
        - name: Start vector service
          become: true
          ansible.builtin.systemd_service:
            state: started
            name: vector
  tasks:
        - name: Install dir vector
          become: true
          ansible.builtin.file:
            path: "{{ vector_distr }}"
            state: directory
            owner: "{{ ansible_ssh_user }}"
            group: "{{ ansible_ssh_user }}"
              
        - name: Get vector distrib
          ansible.builtin.get_url:
            url: "https://packages.timber.io/vector/{{vector_version}}/vector-{{vector_version}}-x86_64-unknown-linux-musl.tar.gz"
            dest: "/tmp/vector-{{vector_version}}-x86_64-unknown-linux-musl.tar.gz"

        - name: Extract vector
          ansible.builtin.unarchive:
            src: "/tmp/vector-{{vector_version}}-x86_64-unknown-linux-musl.tar.gz"
            dest: "{{ vector_distr }}"
            extra_opts:
              - --strip-components=2
            remote_src: yes
        
        - name: Create a user 'vector'
          become: true
          ansible.builtin.user:
            name: vector
            create_home: no
          
        - name: Mkdir vector
          become: true
          ansible.builtin.file:
            path: "{{item}}/vector"
            state: directory
            owner: "vector"
            group: "vector"
          with_items:
                - /etc 
                - /var/lib

        - name: Configurate vector
          become: true
          ansible.builtin.template:
            src: files/vector.j2
            dest: "/etc/vector/vector.yaml"

        - name: Copy vector to /usr/bin
          become: true
          copy:
             src: "{{ vector_distr }}/bin/vector"
             dest: "/usr/bin"
             remote_src: yes
             mode: u+rwx,g+x,o+x
          notify: Start vector service

        - name: Configure systemd
          become: true
          copy:
             src: "{{ vector_distr }}/etc/systemd/vector.service"
             dest: "/etc/systemd/system"
             remote_src: yes
          notify: Start vector service
        
        - name: Flush handlers
          meta: flush_handlers
        #- name: Just force systemd to reread configs (2.4 and above)
        #  ansible.builtin.systemd_service:
         #    daemon_reload: true
        #  notify: Start vector service